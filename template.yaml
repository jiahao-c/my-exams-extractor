AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app-extract

  Sample SAM Template for sam-app-extract

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

Resources:
  ExamExtractor:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ExamExtractor
      Handler: extractor.App::handleRequest
      Runtime: java11
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        ExplicitApi:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            ApiId: !Ref ExtractAPI
            Path: /extract
            Method: POST


  ExtractAPI:
    Type: AWS::Serverless::HttpApi
    Properties:
      RouteSettings:
        "POST /extract":
          ThrottlingBurstLimit: 3
          ThrottlingRateLimit: 3
      AccessLogSettings: 
        DestinationArn: !GetAtt AccessLogs.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      CorsConfiguration:
        AllowOrigins:
          - "http://localhost:8080/"
        AllowHeaders:
          - "*"
        AllowMethods:
          - "*"
        ExposeHeaders:
          - "*"
        MaxAge: 600
        AllowCredentials: false
  
  AccessLogs:
    Type: AWS::Logs::LogGroup

Outputs:
  ExamExtractorApi:
    Description: "API Gateway endpoint URL for Prod stage for Exam Extractor function"
    Value: !Sub "https://${ExtractAPI}.execute-api.${AWS::Region}.amazonaws.com/extract"
  ExamExtractor:
    Description: "Exam Extractor Lambda Function ARN"
    Value: !GetAtt ExamExtractor.Arn
  ExamExtractorIamRole:
    Description: "Implicit IAM Role created for Exam Extractor function"
    Value: !GetAtt ExamExtractorRole.Arn
